가.프로젝트 생성
	1.패키지 설정
	2.프로젝트 실행
	3.브라우저 확인

나.pom.xml
	사용할 라이브러리 등록
	1.오라클 + 마이바티스,jdbc탬플릿,dbcp
	2.몽고디비 + 컨피그레이션 
	3.롬복
	4.젝손
	5.파일업로드(2개)

다. 빈등록
	1.root-context.xml
		a.오라클,마이바티스 용 Bean 4개 추가.
			ㄱ.src/main/resources/jdbc/oracle.properties
				- 오라클디벨로퍼 실행해서 잘 동작하는지 확인
				- multi 사용자 등록(비번 hi123456)
					** system/다른사용자/사용자생성
					** 권한 - 롤(커넥트,리소스),시스템권한(뷰생성)
					** 새접속으로 커넥트 확인.
					** movie 테이블 생성 
					** seq_movie 시퀀스생성
					** 임의의 게시글정보 할당(10개)
			ㄴ.src/main/resources/jdbc/sqlMapper_movie.xml
				-입력,수정,삭제,검색
		b.파일업로드용 빈등록(multipartResolver)
			

	2.@Configuration + @Bean
		a.몽고디비 데이터베이스(multi),컬렉션(member,movie)
		b. ex)MemberConfig.java,movieConfig.java
		
	3.servlet-context.xml
		a.인터셉터 용 클래스 - LoginIntercepter.java
		b.Bean 등록

라.컴포넌트 등록 (HomeController.java- /,/home.do)
	0.VO  : test.com.project.movie.model
		- MovieVO(@Data-lombok)
		- num,title,price,producer,save_name,file
	1.컨트롤러 : test.com.project.movie.controller
		a. MovieController.java,
			...	
		b. MovieRestController.java
			- json_mv_selectAll.do
			...
	2.서비스	 : test.com.project.movie.service
		 a. MovieService.java
			-  selectAll():List<MovieVO>
			- selectOne(MovieVO):MovieVO
			...
	3.리포지토리  : test.com.project.movie.model
		a. MovieDAO(interface) <-- MovieDAOimpl(class)
			-  selectAll():List<MovieVO>
			- selectOne(MovieVO):MovieVO
			...			

마.뷰처리 페이지 등록  
	1.home.jsp
	2.top_menu.jsp
	3.게시글용 페이지들...
		a.movie 폴더 생성
		b.movie/selectAll.jsp -> mv_selectAll.do :MovieController.java
				ㄱ.sqlMapper_movie.xml : select tag 추가 - MV_SELECT_ALL
				ㄴ.@autowired
				   DAOimpl->service->controller
					service.selectAll()함수콜.
						sqlSession.selectList("MV_SELECT_ALL")
				ㄷ.model.addAttribute("vos", vos); 추가
				ㄹ.jsp->jstl->EL표현 
		c.movie/selectAll.jsp -> mv_searchList.do :MovieController.java
				ㄱ.sqlMapper_movie.xml : select tag 추가 
					- MV_SEARCH_LIST_TITLE
					- MV_SEARCH_LIST_PRODUCER
				ㄴ.@autowired
				   DAOimpl->service->controller
					service.selectAll()함수콜.
						sqlSession.selectList("MV_SEARCH_LIST_TITLE","%"+searchWord+"%")
						sqlSession.selectList("MV_SEARCH_LIST_PRODUCER","%"+searchWord+"%")
				ㄷ.model.addAttribute("vos", vos); 추가
				ㄹ.jsp->jstl->EL표현 

		d.movie/selectOne.jsp -> mv_selectOne.do :movieController.java
				ㄱ.sqlMapper_movie.xml : select tag 추가 - MV_SELECT_ONE
				ㄴ.@autowired
				   DAOimpl->service->controller
					service.selectOne(vo)함수콜.
						sqlSession.selectList("MV_SELECT_ONE",vo)
				ㄷ.model.addAttribute("vo2", vo2); 추가
				ㄹ.jsp->jstl->EL표현
				
		e.movie/update.jsp -> mv_update.do : movieController.java
				전송시에 num도 반드시 같이 전송
				ㄱ.sqlMapper_movie.xml : select tag 추가 - MV_SELECT_ONE
				ㄴ.@autowired
				   DAOimpl->service->controller
					service.selectOne(vo)함수콜.
						sqlSession.selectList("MV_SELECT_ONE",vo)
				ㄷ.model.addAttribute("vo2", vo2); 추가
				ㄹ.jsp->jstl->EL표현
				
		f.movie/update.jsp -> mv_updateOK.do : movieController.java
 				enctype="multipart/form-data"
				전송시에 num도 반드시 같이 전송
				ㄱ.sqlMapper_movie.xml : update tag 추가 - MV_UPDATE
				ㄴ.@autowired
				   DAOimpl->service->controller
					update(vo)함수콜.
						sqlSession.update("MV_UPDATE",vo)
				ㄷ.redirect:mv_selectOne.do?num=vo.getNum()
		g.movie/selectOne.jsp -> mv_deleteOK.do : movieController.java
				전송시에 num도 반드시 같이 전송
				ㄱ.sqlMapper_movie.xml : delete tag 추가 - MV_DELETE
				ㄴ.@autowired
				   DAOimpl->service->controller
					delete(vo)함수콜.
						sqlSession.delete("MV_DELETE",vo)
				ㄷ.redirect:mv_selectAll.do


		h.movie/insert.jsp -> mv_insert.do : movieController.java

		i.movie/insert.jsp -> mv_insertOK.do : movieController.java
 				enctype="multipart/form-data"
				ㄱ.sqlMapper_movie.xml : insert tag 추가 - MV_INSERT
				ㄴ.@autowired
				   DAOimpl->service->controller
					insert(vo)함수콜.
						sqlSession.insert("MV_INSERT",vo)
				ㄷ.redirect:mv_selectAll.do
바.로그인 처리
	1.인터셉터 + 세션 + 탑메뉴 정리
	-------------------------------------------------------------------					


사. RestAPI
	1.MovieRestController.java
	2./json_mv_selectAll.do -> @ResponseBody